name: Build, Test and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  build:

    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build o-auth Docker image
        run: |
          docker build -t ${{ env.DOCKER_USERNAME }}/o-auth:latest ./app

      - name: Build o-auth-db Docker image
        run: |
          docker pull mysql:8.0.31
          docker tag mysql:8.0.31 ${{ env.DOCKER_USERNAME }}/o-auth-db:latest

      - name: Push o-auth Docker image
        run: |
          docker push ${{ env.DOCKER_USERNAME }}/o-auth:latest

      - name: Push o-auth-db Docker image
        run: |
          docker push ${{ env.DOCKER_USERNAME }}/o-auth-db:latest

  test:

    runs-on: ubuntu-latest
    needs: build  

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Docker network
        run: docker network create my-network

      - name: Start MySQL Container
        run: |
          docker run -d \
            --name o-auth-db \
            --network my-network \
            -e MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} \
            -e MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} \
            -e MYSQL_USER=${{ secrets.MYSQL_USER }} \
            -e MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
            -p 3306:3306 \
            ${{ secrets.DOCKER_USERNAME }}/o-auth-db:latest

      - name: Start o-auth Service
        run: |
          docker run -d \
            --name o-auth \
            --network my-network \
            -e DEBUG=${{ secrets.DEBUG }} \
            -e MYSQL_ENGINE=${{ secrets.MYSQL_ENGINE }} \
            -e MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} \
            -e MYSQL_USER=${{ secrets.MYSQL_USER }} \
            -e MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
            -e MYSQL_HOST=o-auth-db \
            -e MYSQL_PORT=${{ secrets.MYSQL_PORT }} \
            -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
            -e GOOGLE_TOKEN_URL=${{ secrets.GOOGLE_TOKEN_URL }} \
            -e GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
            -e GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} \
            -e GOOGLE_REDIRECT_URI=${{ secrets.GOOGLE_REDIRECT_URI }} \
            -e GOOGLE_GRANT_TYPE=${{ secrets.GOOGLE_GRANT_TYPE }} \
            -e GOOGLE_USER_INFO_URL=${{ secrets.GOOGLE_USER_INFO_URL }} \
            -p 8000:8000 \
            ${{ secrets.DOCKER_USERNAME }}/o-auth:latest

      # - name: Run migrations inside container
      #   run: |
      #     docker start o-auth
      #     docker exec o-auth python manage.py migrate

      - name: Run tests inside container
        run: |
          docker exec o-auth pytest app/tests/

      - name: Clean up containers
        run: |
          docker-compose -f docker-compose.test.yml down
